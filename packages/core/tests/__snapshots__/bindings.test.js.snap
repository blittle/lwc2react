// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Class bindings should add observable membrane for assignments 1`] = `
"import LightningComponent from \\"lwc2react/lib/LightningComponent\\";
import ObservableMembrane from \\"observable-membrane\\";
import React from \\"react\\";
import _tmpl from \\"./test.html\\";

class Test extends LightningComponent {
  constructor(...args) {
    super(_tmpl);
    this.__s.a = 1;
  }

  setA() {
    this.__s.a = this.__s.a + 1;
  }

  render() {
    const prox = Object.assign({}, this, this.__s);
    prox.__proto__ = this.__proto__;
    return _tmpl(prox);
  }

  componentDidMount() {
    super.componentDidMount(_tmpl);
  }

  componentWillUnmount() {
    super.componentWillUnmount(_tmpl);
  }
}

export default Test;"
`;

exports[`Class bindings should add observable membrane for basic bindings 1`] = `
"import LightningComponent from \\"lwc2react/lib/LightningComponent\\";
import ObservableMembrane from \\"observable-membrane\\";
import React from \\"react\\";
import _tmpl from \\"./test.html\\";

class Test extends LightningComponent {
  constructor(...args) {
    super(_tmpl);
    this.__s.a = 1;
  }

  setA() {
    this.__s.a++;
  }

  render() {
    const prox = Object.assign({}, this, this.__s);
    prox.__proto__ = this.__proto__;
    return _tmpl(prox);
  }

  componentDidMount() {
    super.componentDidMount(_tmpl);
  }

  componentWillUnmount() {
    super.componentWillUnmount(_tmpl);
  }
}

export default Test;"
`;

exports[`Class bindings should compile @api props 1`] = `
"import LightningComponent from \\"lwc2react/lib/LightningComponent\\";
import ObservableMembrane from \\"observable-membrane\\";
import React from \\"react\\";
import _tmpl from \\"./app.html\\";

class App extends LightningComponent {
  constructor(...args) {
    super(_tmpl);
    this.__s.publicProp = void 0;
  }

  render() {
    const prox = Object.assign({}, this, this.__s);
    prox.__proto__ = this.__proto__;
    return _tmpl(prox);
  }

  componentDidMount() {
    super.componentDidMount(_tmpl);
  }

  componentWillUnmount() {
    super.componentWillUnmount(_tmpl);
  }
}

export default App;"
`;

exports[`Class bindings should compile @api props with default values 1`] = `
"import LightningComponent from \\"lwc2react/lib/LightningComponent\\";
import ObservableMembrane from \\"observable-membrane\\";
import React from \\"react\\";
import _tmpl from \\"./app.html\\";

class App extends LightningComponent {
  constructor(...args) {
    super(_tmpl);
    this.__s.publicProp = \\"some default\\";
  }

  render() {
    const prox = Object.assign({}, this, this.__s);
    prox.__proto__ = this.__proto__;
    return _tmpl(prox);
  }

  componentDidMount() {
    super.componentDidMount(_tmpl);
  }

  componentWillUnmount() {
    super.componentWillUnmount(_tmpl);
  }
}

export default App;"
`;

exports[`Class bindings should compile @api with a getter and styles 1`] = `
"import LightningComponent from \\"lwc2react/lib/LightningComponent\\";
import ObservableMembrane from \\"observable-membrane\\";
import React from \\"react\\";
import _tmpl from \\"./app.html\\";

class ProductImage extends LightningComponent {
  constructor(...args) {
    super(_tmpl);
    this.__s.imageUrl = void 0;
    this.__s.productName = \\"name\\";
  }

  get className() {
    return this.__s.productName;
  }

  get url() {
    if (this.__s.imageUrl) {
      return this.__s.imageUrl;
    }

    return \\"https://picsum.photos/200/300\\";
  }

  render() {
    const prox = Object.assign({}, this, this.__s);
    prox.__proto__ = this.__proto__;
    return _tmpl(prox);
  }

  componentDidMount() {
    super.componentDidMount(_tmpl);
  }

  componentWillUnmount() {
    super.componentWillUnmount(_tmpl);
  }
}

export default ProductImage;"
`;

exports[`Class bindings should compile method called from constructor 1`] = `
"import LightningComponent from \\"lwc2react/lib/LightningComponent\\";
import ObservableMembrane from \\"observable-membrane\\";
import React from \\"react\\";
import _tmpl from \\"./app.html\\";

class App extends LightningComponent {
  constructor() {
    super(_tmpl);
    this.__s.wow = \\"hi2\\";
    this.__s.other = \\"hi3\\";
    this.doSomething();
  }

  doSomething() {
    this.__s.wow = \\"hi\\";
  }

  render() {
    const prox = Object.assign({}, this, this.__s);
    prox.__proto__ = this.__proto__;
    return _tmpl(prox);
  }

  componentDidMount() {
    super.componentDidMount(_tmpl);
  }

  componentWillUnmount() {
    super.componentWillUnmount(_tmpl);
  }
}

export default App;"
`;
