// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`General Class Conversion Tests should convert a component that extends from something other than LightningElement 1`] = `
"import LightningComponent from \\"lwc2react/lib/LightningComponent\\";
import ObservableMembrane from \\"observable-membrane\\";
import React from \\"react\\";
import _tmpl from \\"./button.html\\";
import { classSet } from \\"lightning/utils\\";
import { normalizeString as normalize } from \\"lightning/utilsPrivate\\";
import LightningPrimitiveButton from \\"lightning/primitiveButton\\";
import template from \\"./button.html\\";

/**
         * A clickable element used to perform an action.
         */
class LightningButton extends LightningPrimitiveButton {
  constructor(...args) {
    super(_tmpl);
  }

  render() {
    return template;
  }

  render() {
    const prox = Object.assign({}, this, this.__s);
    prox.__proto__ = this.__proto__;
    return _tmpl(prox);
  }

  componentDidMount() {
    super.componentDidMount(_tmpl);
    this.__s.test = \\"hi\\";
  }

  componentWillUnmount() {
    super.componentWillUnmount(_tmpl);
  }
}

export default LightningButton;"
`;

exports[`General Class Conversion Tests should convert calls to this.template to this.template.current 1`] = `
"import LightningComponent from \\"lwc2react/lib/LightningComponent\\";
import ObservableMembrane from \\"observable-membrane\\";
import React from \\"react\\";
import _tmpl from \\"./button.html\\";
import { classSet } from \\"lightning/utils\\";
import { normalizeString as normalize } from \\"lightning/utilsPrivate\\";
import LightningPrimitiveButton from \\"lightning/primitiveButton\\";
import template from \\"./button.html\\";

/**
         * A clickable element used to perform an action.
         */
class LightningButton extends LightningPrimitiveButton {
  constructor() {
    super(_tmpl);
  }

  componentDidUpdate() {
    this.template.current.style.pointerEvents = this.__s.disabled ? \\"none\\" : \\"\\";
    this.template.current.querySelector(\\"hi\\");
  }

  get computedIconClass() {
    return classSet(\\"slds-button__icon\\").add({
      \\"slds-button__icon_left\\": this.normalizedIconPosition === \\"left\\",
      \\"slds-button__icon_right\\": this.normalizedIconPosition === \\"right\\"
    }).toString();
  }

  render() {
    const prox = Object.assign({}, this, this.__s);
    prox.__proto__ = this.__proto__;
    return _tmpl(prox);
  }

  componentDidMount() {
    super.componentDidMount(_tmpl);
    this.template.current.querySelector(\\"hi\\");
  }

  componentWillUnmount() {
    super.componentWillUnmount(_tmpl);
  }
}

export default LightningButton;"
`;

exports[`General Class Conversion Tests should convert object literals within methods 1`] = `
"import LightningComponent from \\"lwc2react/lib/LightningComponent\\";
import ObservableMembrane from \\"observable-membrane\\";
import React from \\"react\\";
import _tmpl from \\"./button.html\\";
import { classSet } from \\"lightning/utils\\";
import { normalizeString as normalize } from \\"lightning/utilsPrivate\\";
import LightningPrimitiveButton from \\"lightning/primitiveButton\\";
import template from \\"./button.html\\";

/**
         * A clickable element used to perform an action.
         */
class LightningButton extends LightningPrimitiveButton {
  constructor() {
    super(_tmpl);
  }

  componentDidUpdate() {
    doSomething({
      [this.__s.something]: this.__s.something
    });

    const a = {
      [this.__s.something]: this.__s.something
    };
  }

  render() {
    const prox = Object.assign({}, this, this.__s);
    prox.__proto__ = this.__proto__;
    return _tmpl(prox);
  }

  componentDidMount() {
    super.componentDidMount(_tmpl);
  }

  componentWillUnmount() {
    super.componentWillUnmount(_tmpl);
  }
}

export default LightningButton;"
`;
